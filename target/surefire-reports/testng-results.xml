<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="12" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-29T18:51:58Z" name="Suite" finished-at="2022-07-29T18:55:04Z" duration-ms="186305">
    <groups>
    </groups>
    <test started-at="2022-07-29T18:51:58Z" name="MacOS Test" finished-at="2022-07-29T18:53:27Z" duration-ms="89334">
      <class name="lambdatest.LambdaTest">
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:51:58Z" name="setUpClass" finished-at="2022-07-29T18:52:07Z" duration-ms="9027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioOne()[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:52:07Z" name="testScenarioOne" finished-at="2022-07-29T18:52:23Z" duration-ms="16348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioOne -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:52:23Z" name="close" finished-at="2022-07-29T18:52:24Z" duration-ms="475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:52:24Z" name="setUpClass" finished-at="2022-07-29T18:52:39Z" duration-ms="14935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioTwo()[pri:1, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:52:39Z" name="testScenarioTwo" finished-at="2022-07-29T18:52:53Z" duration-ms="14256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioTwo -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:52:53Z" name="close" finished-at="2022-07-29T18:52:53Z" duration-ms="447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:52:53Z" name="setUpClass" finished-at="2022-07-29T18:53:07Z" duration-ms="13731" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioThree()[pri:2, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:53:07Z" name="testScenarioThree" finished-at="2022-07-29T18:53:27Z" duration-ms="19667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioThree -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:53:27Z" name="close" finished-at="2022-07-29T18:53:27Z" duration-ms="424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- lambdatest.LambdaTest -->
    </test> <!-- MacOS Test -->
    <test started-at="2022-07-29T18:51:58Z" name="Windows 7 Test" finished-at="2022-07-29T18:54:06Z" duration-ms="128494">
      <class name="lambdatest.LambdaTest">
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:51:58Z" name="setUpClass" finished-at="2022-07-29T18:52:10Z" duration-ms="12460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioOne()[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:52:10Z" name="testScenarioOne" finished-at="2022-07-29T18:52:26Z" duration-ms="15215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioOne -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:52:26Z" name="close" finished-at="2022-07-29T18:52:26Z" duration-ms="691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:52:26Z" name="setUpClass" finished-at="2022-07-29T18:52:39Z" duration-ms="13224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioTwo()[pri:1, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:52:39Z" name="testScenarioTwo" finished-at="2022-07-29T18:52:53Z" duration-ms="13732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioTwo -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:52:53Z" name="close" finished-at="2022-07-29T18:52:54Z" duration-ms="721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:52:54Z" name="setUpClass" finished-at="2022-07-29T18:53:48Z" duration-ms="54347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioThree()[pri:2, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:53:48Z" name="testScenarioThree" finished-at="2022-07-29T18:54:06Z" duration-ms="17393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioThree -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:54:06Z" name="close" finished-at="2022-07-29T18:54:06Z" duration-ms="686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- lambdatest.LambdaTest -->
    </test> <!-- Windows 7 Test -->
    <test started-at="2022-07-29T18:51:58Z" name="Windows 10 Test" finished-at="2022-07-29T18:55:01Z" duration-ms="183467">
      <class name="lambdatest.LambdaTest">
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:51:58Z" name="setUpClass" finished-at="2022-07-29T18:53:37Z" duration-ms="99619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioOne()[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:53:37Z" name="testScenarioOne" finished-at="2022-07-29T18:53:55Z" duration-ms="17579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioOne -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:53:55Z" name="close" finished-at="2022-07-29T18:53:55Z" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:53:55Z" name="setUpClass" finished-at="2022-07-29T18:54:17Z" duration-ms="21797" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioTwo()[pri:1, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:54:17Z" name="testScenarioTwo" finished-at="2022-07-29T18:54:32Z" duration-ms="14536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioTwo -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:54:32Z" name="close" finished-at="2022-07-29T18:54:32Z" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:54:32Z" name="setUpClass" finished-at="2022-07-29T18:54:43Z" duration-ms="10836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioThree()[pri:2, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:54:43Z" name="testScenarioThree" finished-at="2022-07-29T18:55:01Z" duration-ms="18485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioThree -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:55:01Z" name="close" finished-at="2022-07-29T18:55:01Z" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- lambdatest.LambdaTest -->
    </test> <!-- Windows 10 Test -->
    <test started-at="2022-07-29T18:51:58Z" name="Windows 10" finished-at="2022-07-29T18:55:04Z" duration-ms="186305">
      <class name="lambdatest.LambdaTest">
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:51:58Z" name="setUpClass" finished-at="2022-07-29T18:53:18Z" duration-ms="80442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Internet Explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioOne()[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:53:18Z" name="testScenarioOne" finished-at="2022-07-29T18:53:36Z" duration-ms="17301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioOne -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:53:36Z" name="close" finished-at="2022-07-29T18:53:36Z" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:53:36Z" name="setUpClass" finished-at="2022-07-29T18:54:08Z" duration-ms="32613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Internet Explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioTwo()[pri:1, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:54:08Z" name="testScenarioTwo" finished-at="2022-07-29T18:54:25Z" duration-ms="16825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioTwo -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:54:25Z" name="close" finished-at="2022-07-29T18:54:25Z" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:54:25Z" name="setUpClass" finished-at="2022-07-29T18:54:42Z" duration-ms="16903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Internet Explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioThree()[pri:2, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:54:42Z" name="testScenarioThree" finished-at="2022-07-29T18:55:04Z" duration-ms="21676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioThree -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:55:04Z" name="close" finished-at="2022-07-29T18:55:04Z" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- lambdatest.LambdaTest -->
    </test> <!-- Windows 10 -->
  </suite> <!-- Suite -->
</testng-results>
