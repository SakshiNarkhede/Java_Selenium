<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="12" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-29T18:45:39Z" name="Suite" finished-at="2022-07-29T18:48:59Z" duration-ms="200043">
    <groups>
    </groups>
    <test started-at="2022-07-29T18:45:39Z" name="MacOS Test" finished-at="2022-07-29T18:47:39Z" duration-ms="120236">
      <class name="lambdatest.LambdaTest">
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:45:39Z" name="setUpClass" finished-at="2022-07-29T18:46:17Z" duration-ms="38408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioOne()[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:46:17Z" name="testScenarioOne" finished-at="2022-07-29T18:46:34Z" duration-ms="16312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioOne -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:46:34Z" name="close" finished-at="2022-07-29T18:46:34Z" duration-ms="482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:46:34Z" name="setUpClass" finished-at="2022-07-29T18:46:48Z" duration-ms="14036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioTwo()[pri:1, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:46:48Z" name="testScenarioTwo" finished-at="2022-07-29T18:47:02Z" duration-ms="14395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioTwo -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:47:02Z" name="close" finished-at="2022-07-29T18:47:03Z" duration-ms="537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:47:03Z" name="setUpClass" finished-at="2022-07-29T18:47:19Z" duration-ms="16377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MicrosoftEdge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioThree()[pri:2, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:47:19Z" name="testScenarioThree" finished-at="2022-07-29T18:47:38Z" duration-ms="19116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioThree -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@293a5bf6]" started-at="2022-07-29T18:47:38Z" name="close" finished-at="2022-07-29T18:47:39Z" duration-ms="549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- lambdatest.LambdaTest -->
    </test> <!-- MacOS Test -->
    <test started-at="2022-07-29T18:45:39Z" name="Windows 7 Test" finished-at="2022-07-29T18:48:06Z" duration-ms="146934">
      <class name="lambdatest.LambdaTest">
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:45:39Z" name="setUpClass" finished-at="2022-07-29T18:45:48Z" duration-ms="9548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioOne()[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:45:48Z" name="testScenarioOne" finished-at="2022-07-29T18:46:04Z" duration-ms="15938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioOne -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:46:04Z" name="close" finished-at="2022-07-29T18:46:05Z" duration-ms="702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:46:05Z" name="setUpClass" finished-at="2022-07-29T18:46:18Z" duration-ms="12748" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioTwo()[pri:1, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:46:18Z" name="testScenarioTwo" finished-at="2022-07-29T18:46:32Z" duration-ms="14582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioTwo -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:46:32Z" name="close" finished-at="2022-07-29T18:46:33Z" duration-ms="684" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:46:33Z" name="setUpClass" finished-at="2022-07-29T18:47:47Z" duration-ms="74416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioThree()[pri:2, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:47:47Z" name="testScenarioThree" finished-at="2022-07-29T18:48:05Z" duration-ms="17588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioThree -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@35cabb2a]" started-at="2022-07-29T18:48:05Z" name="close" finished-at="2022-07-29T18:48:06Z" duration-ms="702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- lambdatest.LambdaTest -->
    </test> <!-- Windows 7 Test -->
    <test started-at="2022-07-29T18:45:39Z" name="Windows 10 Test" finished-at="2022-07-29T18:48:41Z" duration-ms="181756">
      <class name="lambdatest.LambdaTest">
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:45:39Z" name="setUpClass" finished-at="2022-07-29T18:45:49Z" duration-ms="10313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioOne()[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:45:49Z" name="testScenarioOne" finished-at="2022-07-29T18:46:05Z" duration-ms="16226" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioOne -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:46:05Z" name="close" finished-at="2022-07-29T18:46:06Z" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:46:06Z" name="setUpClass" finished-at="2022-07-29T18:47:17Z" duration-ms="71103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioTwo()[pri:1, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:47:17Z" name="testScenarioTwo" finished-at="2022-07-29T18:47:32Z" duration-ms="14903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioTwo -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:47:32Z" name="close" finished-at="2022-07-29T18:47:32Z" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:47:32Z" name="setUpClass" finished-at="2022-07-29T18:48:18Z" duration-ms="46216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioThree()[pri:2, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:48:18Z" name="testScenarioThree" finished-at="2022-07-29T18:48:40Z" duration-ms="22383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioThree -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@55183b20]" started-at="2022-07-29T18:48:40Z" name="close" finished-at="2022-07-29T18:48:41Z" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- lambdatest.LambdaTest -->
    </test> <!-- Windows 10 Test -->
    <test started-at="2022-07-29T18:45:39Z" name="Windows 10" finished-at="2022-07-29T18:48:59Z" duration-ms="200043">
      <class name="lambdatest.LambdaTest">
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:45:39Z" name="setUpClass" finished-at="2022-07-29T18:46:49Z" duration-ms="69792" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Internet Explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioOne()[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:46:49Z" name="testScenarioOne" finished-at="2022-07-29T18:47:06Z" duration-ms="17462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioOne -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:47:06Z" name="close" finished-at="2022-07-29T18:47:06Z" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:47:06Z" name="setUpClass" finished-at="2022-07-29T18:47:57Z" duration-ms="50601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Internet Explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioTwo()[pri:1, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:47:57Z" name="testScenarioTwo" finished-at="2022-07-29T18:48:12Z" duration-ms="15483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioTwo -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:48:12Z" name="close" finished-at="2022-07-29T18:48:12Z" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setUpClass(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:48:12Z" name="setUpClass" finished-at="2022-07-29T18:48:32Z" duration-ms="19621" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Internet Explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="testScenarioThree()[pri:2, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:48:32Z" name="testScenarioThree" finished-at="2022-07-29T18:48:59Z" duration-ms="26776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenarioThree -->
        <test-method is-config="true" signature="close()[pri:0, instance:lambdatest.LambdaTest@3349e9bb]" started-at="2022-07-29T18:48:59Z" name="close" finished-at="2022-07-29T18:48:59Z" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- lambdatest.LambdaTest -->
    </test> <!-- Windows 10 -->
  </suite> <!-- Suite -->
</testng-results>
